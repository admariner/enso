from Standard.Base.Nothing import Nothing

type Unresolved_Symbol
    Value value

    name self = get_unresolved_symbol_name self.value
    scope self = get_unresolved_symbol_scope self.value

type Primitive
    Value value

type_of value = @Builtin_Method "Meta.type_of"

is_polyglot value = 3 == get_kind_builtin value
get_kind_builtin value = @Builtin_Method "Meta.get_kind_builtin"

# A **very** minimal version of meta for the purpose of tests
meta value =
    kind = get_kind_builtin value
    case kind of
        #1 -> Constructor.Value ac
        #2 -> Atom.Value value
        #3 -> Polyglot.Value value
        4 -> Unresolved_Symbol.Value value
        #5 -> Error.Value value.catch
        #6 -> Type.Value value
        _ -> Primitive.Value value

get_unresolved_symbol_name symbol = @Builtin_Method "Meta.get_unresolved_symbol_name"
get_unresolved_symbol_scope symbol = @Builtin_Method "Meta.get_unresolved_symbol_scope"
get_atom_constructor atom = @Builtin_Method "Meta.get_atom_constructor"
get_constructor_name atom_constructor = @Builtin_Method "Meta.get_constructor_name"

@Builtin_Type
type Project_Description
    new module = Project_Description.enso_project_builtin module

    Value prim_root_file prim_config

    name self = self.prim_config.name

    enso_project_builtin module = @Builtin_Method "Project_Description.enso_project_builtin"

enso_project = Project_Description.enso_project_builtin Nothing
