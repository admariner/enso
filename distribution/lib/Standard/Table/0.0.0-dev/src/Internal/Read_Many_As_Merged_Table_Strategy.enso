from Standard.Base import all
import Standard.Base.Errors.Common.Failed_To_Load
import Standard.Base.Errors.Illegal_Argument.Illegal_Argument

import project.Columns_To_Keep.Columns_To_Keep
import project.Errors.No_Rows
import project.Extensions.Table_Conversions
import project.Match_Columns.Match_Columns
import project.Table.Table

## PRIVATE
   Determines how an object should be converted into a table for merging during 
   a `read_many` operation with `As_Merged_Table` return mode.
type Read_Many_As_Merged_Table_Strategy
    ## PRIVATE
    Value (into_table : Any -> Columns_To_Keep -> Match_Columns -> Problem_Behavior -> Read_Many_As_Table_Result)

## PRIVATE
type Read_Many_As_Table_Result
    ## PRIVATE
    Table metadata:Nothing|Table data:Table

    ## PRIVATE
    No_Data

## PRIVATE
Read_Many_As_Merged_Table_Strategy.from (that : Table) =
    callback path _ _ on_problems = 
        table = if that.row_count > 0 then that else
            on_problems.attach_problem_after that <|
                (No_Rows.Warning "The "+path.to_display_text+" loaded as a table with 0 rows, so it did not contribute any rows to the `As_Merged_Table` result of `read_many`.")
        Read_Many_As_Table_Result.Table metadata=Nothing data=table
    Read_Many_As_Merged_Table_Strategy.Value callback

## PRIVATE
Read_Many_As_Merged_Table_Strategy.from (that : Vector) =
    callback path _ _ on_problems = 
        if that.not_empty then Read_Many_As_Table_Result.Table metadata=Nothing data=(_interpret_as_table that path on_problems) else
            on_problems.attach_problem_after Read_Many_As_Table_Result.No_Data <|
                (No_Rows.Warning "The "+path.to_display_text+" loaded as an empty array, so it is not included in the `As_Merged_Table` result of `read_many`.")
    Read_Many_As_Merged_Table_Strategy.Value callback

## PRIVATE
Read_Many_As_Merged_Table_Strategy.from (that : Failed_To_Load) =
    callback path _ _ on_problems =
        on_problems.attach_problem_after Read_Many_As_Table_Result.No_Data <|
            (No_Rows.Warning "The "+path.to_display_text+" failed to load, so it is not included in the `As_Merged_Table` result of `read_many`. Caused by: "+that.cause.to_display_text)
    Read_Many_As_Merged_Table_Strategy.Value callback

## PRIVATE
   The fallback strategy for converting a generic object into a table.
   Custom data types may implement a conversion to override this strategy, like above.
Read_Many_As_Merged_Table_Strategy.from (that : Any) =
    callback path _ _ on_problems =
        Read_Many_As_Table_Result.Table metadata=Nothing data=(_interpret_as_table that path on_problems)
    Read_Many_As_Merged_Table_Strategy.Value callback

private _interpret_as_table (object : Any) path on_problems =
    Table.from_objects object . catch Illegal_Argument error->
        problem = Illegal_Argument.Error "Problem converting "+object.to_display_text+" (loaded from "+path.to_display_text+") to a Table: "+error.to_display_text cause=error
        on_problems.attach_problem_before problem <|
            # If it was an array that failed to load, let's expand it to rows, otherwise have 1 row for the unknown object.
            vec = if object.is_a Vector then object else [object]
            Table.new [["Value", vec]]
