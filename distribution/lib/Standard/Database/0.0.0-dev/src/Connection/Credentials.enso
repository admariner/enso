from Standard.Base import all
import Standard.Base.Errors.Common.Missing_Argument
import Standard.Base.Metadata.Display
import Standard.Base.Metadata.Widget
from Standard.Base.Metadata.Choice import Option
from Standard.Base.Metadata.Widget import Single_Choice
from Standard.Base.Widget_Helpers import make_text_secret_selector

type Credentials
    ## Simple username and password type.
    @username (make_text_secret_selector display=..Always)
    @password (make_text_secret_selector display=..Always)
    Username_And_Password
        username:(Text|Enso_Secret)=(Missing_Argument.throw "username")
        password:(Text|Enso_Secret)=(Missing_Argument.throw "password")

    ## PRIVATE
       Override `to_text` to mask the password field.
    to_text : Text
    to_text self = 'Credentials ' + self.username + ' *****'

    ## PRIVATE
    to_display_text self -> Text = self.to_text.to_display_text

    ## PRIVATE
    default_widget (include_nothing : Boolean = True) display:Display=..When_Modified -> Widget =
        fqn = Credentials.to Meta.Type . qualified_name
        values = [Option "Username_And_Password" fqn+".Username_And_Password"] + if include_nothing then [Option "No credentials" "Nothing"] else []
        Single_Choice values=values display=display
