from Standard.Base import all

import project.Internal.IR.Nulls_Order.Nulls_Order
import project.Internal.IR.SQL_Expression.SQL_Expression

## PRIVATE
type Order_Descriptor
    ## PRIVATE
    Value (expression : SQL_Expression) (direction : Sort_Direction) (nulls_order : Nothing | Nulls_Order = Nothing) (collation : Nothing | Text = Nothing)

    reverse self -> Order_Descriptor =
        new_direction = case self.direction of
            Sort_Direction.Ascending -> Sort_Direction.Descending
            Sort_Direction.Descending -> Sort_Direction.Ascending
        new_nulls_order = case self.nulls_order of
            Nothing -> Nothing
            Nulls_Order.First -> Nulls_Order.Last
            Nulls_Order.Last -> Nulls_Order.First
        Order_Descriptor.Value self.expression new_direction new_nulls_order self.collation

    ## PRIVATE
       A bottom-up, depth-first traversal of this IR node and its children. Each
       node is passed to the provided function, and the return value of the
       function replaces this node in the tree.
    traverse : (Any -> Any) -> Order_Descriptor
    traverse self f -> Order_Descriptor =
        rec e = e.traverse f

        new_order_descriptor = case self of
            Order_Descriptor.Value expression direction nulls_order collation ->
                Order_Descriptor.Value (rec expression) direction nulls_order collation
        f new_order_descriptor
