# This file is auto-generated. Do not edit it manually!
# Edit the enso_build::ci_gen module instead and run `cargo run --package enso-build-ci-gen`.

name: Changelog
on:
  pull_request:
    types:
      - labeled
      - unlabeled
      - synchronize
      - opened
      - reopened
jobs:
  changelog:
    name: Changelog
    runs-on:
      - X64
    steps:
      - if: runner.os == 'Windows'
        name: Setup required bazel environment
        run: "\n\"BAZEL_SH=C:\\Program Files\\Git\\bin\\bash.exe\" >> $env:GITHUB_ENV\n\"BAZEL_VC=C:\\BuildTools\\VC\" >> $env:GITHUB_ENV\n        "
        shell: pwsh
      - name: Setup bazel environment
        uses: bazel-contrib/setup-bazel@0.13.0
        with:
          bazelrc: build --remote_cache=grpcs://${{ vars.ENSO_BAZEL_CACHE_URI }} --remote_cache_header="authorization=Basic ${{ secrets.ENSO_BAZEL_CACHE_TOKEN }}"
          output-base: ${{ runner.os == 'Windows' && 'c:/_bazel' || '' }}
      - name: Expose Artifact API and context information.
        uses: actions/github-script@v7
        with:
          script: "\n    core.exportVariable(\"ACTIONS_RUNTIME_TOKEN\", process.env[\"ACTIONS_RUNTIME_TOKEN\"])\n    core.exportVariable(\"ACTIONS_RUNTIME_URL\", process.env[\"ACTIONS_RUNTIME_URL\"])\n    core.exportVariable(\"GITHUB_RETENTION_DAYS\", process.env[\"GITHUB_RETENTION_DAYS\"])\n    console.log(context)\n    "
      - name: Checking out the repository
        uses: actions/checkout@v4
        with:
          clean: false
          submodules: recursive
      - if: runner.os == 'macOS'
        name: Setup nodejs version
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
      - if: runner.os != 'Linux'
        run: npm install -g corepack@0.31.0 && corepack --version
      - name: Build Script Setup
        run: ./run --help || (git clean -ffdx && ./run --help)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: "(contains(github.event.pull_request.labels.*.name, 'CI: Clean build required') || inputs.clean_build_required)"
        name: Clean before
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ./run changelog-check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: "(always()) && (contains(github.event.pull_request.labels.*.name, 'CI: Clean build required') || inputs.clean_build_required)"
        name: Clean after
        run: ./run git-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
env:
  ENSO_BUILD_SKIP_VERSION_CHECK: "true"
